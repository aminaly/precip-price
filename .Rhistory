install.packages("dataseries")
install.packages("datasets.load")
library(datasets)
?datasets
data("iris")
data(iris)
summary(iris)
a <- data(iris)
iew(iris)
View(data("iris"))
View(data(iris))
View(iris)
summary(iris)
summary(iris)
install.packages("data.table")
as.data.table(iris)
library(data.table)
summary(iris)
as.data.table(iris)
iris
as.data.table(iris)
iris[Sepal.Width > 3]
iris <- as.data.table(iris)
iris[Sepal.Width > 3]
iris[Sepal.Width > 4,.(Sepal.Length, Species)]
sepal_greater_three <- iris[Sepal.Width > 3]
iris
sepal_greater_three
#give me petal.length and petal.width + 1 for every record with a sepal.length
#greater than 5 BY species
iris[Sepal.Length > 5,.(PL = sum(Petal.Length), PW = sum(Petal.Width)),.(Species)]
install.packages("extRemes")
?extRemes
?extremes
library(extRemes)
?extRemes
data(HEAT)
HEAT
?return.level
?fevd
fevd(HEAT)
fevd(HEAT[,1])
HEAT <- as.data.table(HEAT)
f_heat <- fevd(HEAT[,Tmax])
return.level(f_heat, c(5,10,50))
return.level(f_heat, c(5,15,50))
return.level(f_heat, c(1, 5,15,50))
return.level(f_heat, c(2, 5,15,50))
return.level(f_heat, c(2, 5,15,50, 200))
118/116
200 / 116
install.packages("ncdf4")
ftp://ftp.cdc.noaa.gov/Datasets/cpc_global_precip/precip.1979.nc
library(ncdf4)
download.file("ftp://ftp.cdc.noaa.gov/Datasets/cpc_global_precip/precip.1979.nc", "here.nc")
precip <- nc_open("here.nc")
precip
water <- ncvar_get(precip)
water
?ncvar_get
download.file("ftp://ftp.cdc.noaa.gov/Datasets/cpc_global_precip/precip.1990.nc", "here.nc")
precip <- nc_open("here.nc")
water <- ncvar_get(precip)
View(water)
water
install.packages("ismev")
library(ismev)
install.packages("extRemes")
install.packages("extRemes")
install.packages("extRemes")
R.home()
install.packages("ismev", lib  = "/Users/amina/anaconda2/lib/R/library")
install.packages("extRemes", lib = "/Users/amina/anaconda2/lib/R/library")
install.packages("extRemes", lib = "/Users/amina/anaconda2/lib/R/library")
install.packages("extRemes", lib = "/Users/amina/anaconda2/lib/R/library")
install.packages("mgcv", lib = "/Users/amina/anaconda2/lib/R/library")
install.packages("mgcv", lib = "/Users/amina/anaconda2/lib/R/library")
install.packages("nlme", lib = "/Users/amina/anaconda2/lib/R/library")
install.packages("nlme", lib = "/Users/amina/anaconda2/lib/R/library")
install.packages("lattice", lib = "/Users/amina/anaconda2/lib/R/library")
install.packages("lattice", lib = "/Users/amina/anaconda2/lib/R/library")
detach("package:graphics", unload=TRUE)
detach("package:grDevices", unload=TRUE)
detach("package:methods", unload=TRUE)
detach("package:stats", unload=TRUE)
detach("package:utils", unload=TRUE)
install.packages("Matrix", lib = "/Users/amina/anaconda2/lib/R/library")
install.packages(c("car", "data.table", "digest", "DT", "htmlwidgets", "lme4", "MASS", "Matrix", "mgcv", "nlme", "quantreg", "Rcpp", "RcppEigen", "rpart", "yaml"))
library("tools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("Matrix", lib = "/Users/amina/anaconda2/lib/R/library")
install.packages("Matrix", lib = "/Users/amina/anaconda2/lib/R/library")
install.packages("Matrix", lib = "/Users/amina/anaconda2/lib/R/library")
library(extRemes)
val <- 7.392210
fevd(val, verbose=T)
debug(fevd)
library(extRemes)
val <- 7.392210
fevd(val, verbose=T)
ipars2
?fevd
data <- read.csv("/Users/amina/Documents/example.csv")
data
?file.exists
?tryCatch
tryCatch(stop(e), error = function(e) e, finally = print("Hello"))
e <- 44
tryCatch(stop(e), error = function(e) e, finally = print("Hello"))
}
library(extRemes)
?extRemes
help("extRemes")
?fevd
### Running some basic code to decide on ideal model for each commodity
# Source files with functions useful/data prep
source('~/Documents/Stanford/precip-price/format_price.R')
#If you don't need to extract, just use this to get pp_data together. If you do, you'll need to run precip_extract
buf <- 2
rdsname <- paste0("precip/", buf, "_precip.rds")
precip <- readRDS(rdsname)
precipname <- paste0("precip/", buf, "_ppdata.csv")
source('~/Documents/Stanford/precip-price/Functions for Analysis.R')
## Get data for each commodity
#lets get the sorghum we want specificially & merge in seasonality
sorghum <- filter_grain(pp_data, "Sorghum")
sorghum <- merge_seasons(sorghum, "sorghum")
#get locations with the right set of dates
sorghum <- filter_dates(sorghum, "Sorghum")
#calcualte precip for correct set of dates
sorghum <- calc_precip(sorghum)
#lets get the millet we want specificially & merge in seasonality
millet <- filter_grain(pp_data, "Millet")
millet <- merge_seasons(millet, "millet")
#get locations with the right set of dates
millet <- filter_dates(millet, "Millet")
#calcualte precip for correct set of dates
millet <- calc_precip(millet)
#lets get the maize we want specificially & merge in seasonality
maize <- filter_grain(pp_data, "Maize")
maize <- merge_seasons(maize, "maize")
#get locations with the right set of dates
maize <- filter_dates(maize, "Maize")
#calcualte precip for correct set of dates
maize <- calc_precip(maize)
head(pp_data)
fevd(pp_data$avg_rainfall)
?ci
?extRemes::ci
??ci
library(extRemes)
?ci
ci.fevd(pp_data$avg_rainfall)
head(pp_data)
?ci.fevd
o <- fevd(pp_data$avg_rainfall)
oc <- ci.fevd(o)
oc
max(pp_data$avg_rainfall)
mean(pp_data$avg_rainfall)
o
?fevd
o <- fevd(pp_data$avg_rainfall, type = c("GEV"))
o
plot(o)
plot(o)
sorghum
head(sorghum)
o <- fevd(sorghum$avg_rainfall)
plot(o)
o <- fevd(millet$avg_rainfall)
plot(o)
max(millet$avg_rainfall)
max(sorghum$avg_rainfall)
summary(o)
quantile(sorghum$avg_rainfall, probs=c(0.05, 0.5, 0.95))
names(quantile(sorghum$avg_rainfall, probs=c(0.05, 0.5, 0.95)))
quantile(sorghum$avg_rainfall, probs=c(0.05, 0.5, 0.95))$"95%"
quantile(sorghum$avg_rainfall, probs=c(0.05, 0.5, 0.95))[3]
quantile(sorghum$avg_rainfall, probs=c(0.95))[3]
quantile(sorghum$avg_rainfall, probs=c(0.95))
quantile(sorghum$avg_rainfall, probs=c(0.95)) == 355.0024
quantile(sorghum$avg_rainfall, probs=c(0.95)) > 355.0024
quantile(sorghum$avg_rainfall, probs=c(0.95)) > 355.0025
quantile(data$avg_rainfall, probs=c(0.95))
quantile(sorghum$avg_rainfall, probs=c(0.95))
a <- quantile(sorghum$avg_rainfall, probs=c(0.95))
sorghum[sorghum$avg_rainfall > a,]
head(sorghum[sorghum$avg_rainfall > a,])
get_extreme_days <- function(data) {
cutoff <- quantile(data$avg_rainfall, probs=c(0.95))
return(data[data$avg_rainfall >= cutoff])
}
warnings()
a <- get_extreme_days(sorghum)
#currently just getting the quantiles and picking everything at or above 95% percentile
get_extreme_days <- function(data) {
cutoff <- quantile(data$avg_rainfall, probs=c(0.95))
return(data[data$avg_rainfall >= cutoff,])
}
a <- get_extreme_days(sorghum)
a
head(a)
a[1,]
a[1,]$date
a[1,]$date-1
a[1,]$date-30
