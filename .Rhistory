#run logs
fllinear <- l_regress_felm(com, t, 1)
flquad <- l_regress_felm(com, t, 2)
flthird <- l_regress_felm(com, t, 3)
fllog <- l_regress_felm(com, t, "log")
p_llinear <- all(summary(fllinear)$coefficients[,4] < 0.05)
p_lquad <- all(summary(flquad)$coefficients[,4] < 0.05)
p_lthird <- all(summary(flthird)$coefficients[,4] < 0.05)
p_llog <- all(summary(fllog)$coefficients[,4] < 0.05)
gr <- as.character(com$type[1])
outcomes <- cbind(gr, t, AIC(llinear), p_llinear,
AIC(lquad), p_lquad, AIC(lthird),
p_lthird, AIC(llog), p_llog)
final <- rbind(final, outcomes)
}
}
for(com in commods) {
print(com)
for(t in types) {
print(t)
#run logs
llinear <- l_regress(com, t, 1)
lquad <- l_regress(com, t, 2)
lthird <- l_regress(com, t, 3)
llog <- l_regress(com, t, "log")
#run logs
fllinear <- l_regress_felm(com, t, 1)
flquad <- l_regress_felm(com, t, 2)
flthird <- l_regress_felm(com, t, 3)
fllog <- l_regress_felm(com, t, "log")
p_llinear <- all(summary(fllinear)$coefficients[,4] < 0.05)
p_lquad <- all(summary(flquad)$coefficients[,4] < 0.05)
p_lthird <- all(summary(flthird)$coefficients[,4] < 0.05)
p_llog <- all(summary(fllog)$coefficients[,4] < 0.05)
gr <- as.character(com$type[1])
outcomes <- cbind(gr, t, AIC(llinear), p_llinear,
AIC(lquad), p_lquad, AIC(lthird),
p_lthird, AIC(llog), p_llog)
final <- rbind(final, outcomes)
}
}
t <- p_sow
com <- sorghum
#run logs
llinear <- l_regress(com, t, 1)
lquad <- l_regress(com, t, 2)
lthird <- l_regress(com, t, 3)
llog <- l_regress(com, t, "log")
debug(l_regress)
llog <- l_regress(com, t, "log")
s <- sorghum %>% filter(is.na(p_sow))
s
s <- sorghum %>% filter(is.na(def_value))
s
s <- sorghum %>% filter(def_value == "NaN")
s
s <- sorghum %>% filter(def_value == NaN)
s
s <- sorghum %>% filter(def_value == Inf)
s
s <- sorghum %>% filter(is.nan(def_value))
s
s <- sorghum %>% filter(is.nan(p_sow))
s
s <- sorghum %>% filter(p_sow == Inf)
s
s <- sorghum %>% filter(is.nan(sorghum))
sorghum
head(sorghum)
s <- sorghum %>% filter(is.nan(log(p_sow)))
s
s <- sorghum %>% filter((log(p_sow) == Inf))
s
s <- sorghum %>% filter(!is.finite(log(p_sow)))
s
log(0)
s <- sorghum %>% filter(!is.finite(log(def_value)))
s
llog <- l_regress(com, t, "log")
lm(log(def_value) ~ log(p_sow) + as.factor(market) + as.factor(yrmnth), data=data)
data
d <- data %>% filter(!is.finite(def_value))
d
d <- data %>% filter(is.finite(def_value))
d
lm(log(def_value) ~ log(p_sow) + as.factor(market) + as.factor(yrmnth), data=data)
d <- data %>% filter(is.nan(def_value))
d
d <- data %>% filter(is.na(def_value))
d
d <- data %>% filter(def_value == Inf)
d
d <- data %>% filter(is.infinite(def_value))
llog <- l_regress(com, t, "log")
lm(log(def_value) ~ log(p_sow) + as.factor(market) + as.factor(yrmnth), data=data)
data %>% filter(is.infinite(def_value))
data %>% filter(is.infinite(log(def_value)))
data %>% filter(is.nan(log(def_value)))
data %>% filter(is.na(log(def_value)))
lm(log(def_value) ~ log(p_grow) + as.factor(market) + as.factor(yrmnth), data=data)
lm(log(def_value) ~ log(p_harv) + as.factor(market) + as.factor(yrmnth), data=data)
is.na(log(def_value))
is.na(log(data$def_value))
unique(is.na(log(data$def_value)))
unique(is.nan(log(data$def_value)))
log(def_value)
log(data$def_value)
unique(is.numeric(log(data$def_value)))
log <- function(x) ifelse(x <= 0, 0, base::log(x))
lm(log(def_value) ~ log(p_sow) + as.factor(market) + as.factor(yrmnth), data=data)
data$def_value == 0
data %>% filter(def_value == 0)
source('~/Documents/Stanford/precip-price/functions_for_analysis.R', echo=TRUE)
### Running some basic code to decide on ideal model for each commodity
# Source files with functions useful/data prep
setwd("/Users/amina/Documents/Stanford/precip-price")
price <- readRDS("saved-output/formatted-price.rds")
bufs <- c(.25,1,2)
# Arguments to change depending on what you want to run
daily <- c(TRUE, TRUE, FALSE, FALSE)
zeros <- c(TRUE, FALSE, TRUE, FALSE)
#If you don't need to extract, just use this to get pp_data together. If you do, you'll need to run precip_extract
for(run in 1:4) {
all_final <- c()
include_zeros <- zeros[run]
run_daily <- daily[run]
filename <- "model-comps/model_selection"
filename <- ifelse(run_daily, paste0(filename, "_average"), paste0(filename, "_accumulated"))
filename <- ifelse(include_zeros, paste0(filename, "_zeros.csv"), paste0(filename, "_no_zeros.csv"))
if(dir.exists(paste0(getwd(), "/", filename))) next
for(buf in bufs) {
rdsname <- paste0("precip/", buf, "_precip.rds")
precip <- readRDS(rdsname)
source('~/Documents/Stanford/precip-price/functions_for_analysis.R')
#get the right pp_Data
pp_data <- clean_precip(precip)
sorghum <- get_grain_data(pp_data, "sorghum", run_daily, include_zeros)
millet <- get_grain_data(pp_data, "millet", run_daily, include_zeros)
maize <- get_grain_data(pp_data, "maize", run_daily, include_zeros)
## run linear, quad, and 3rd regression and make a table
commods <- list(sorghum, millet, maize)
types <- c("p_sow", "p_grow", "p_harv", "p_sup", "p_onemonth")
final <- c()
for(com in commods) {
for(t in types) {
#run logs
llinear <- l_regress(com, t, 1)
lquad <- l_regress(com, t, 2)
lthird <- l_regress(com, t, 3)
llog <- l_regress(com, t, "log")
#run logs
fllinear <- l_regress_felm(com, t, 1)
flquad <- l_regress_felm(com, t, 2)
flthird <- l_regress_felm(com, t, 3)
fllog <- l_regress_felm(com, t, "log")
p_llinear <- all(summary(fllinear)$coefficients[,4] < 0.05)
p_lquad <- all(summary(flquad)$coefficients[,4] < 0.05)
p_lthird <- all(summary(flthird)$coefficients[,4] < 0.05)
p_llog <- all(summary(fllog)$coefficients[,4] < 0.05)
gr <- as.character(com$type[1])
outcomes <- cbind(gr, t, AIC(llinear), p_llinear,
AIC(lquad), p_lquad, AIC(lthird),
p_lthird, AIC(llog), p_llog)
final <- rbind(final, outcomes)
}
}
colnames(final) <- c("grain", "time_period", "log_linear", "ll_pvals", "log_2", "l2_pvals",
"log_3", "l3_pvals", "log_log", "lg_pvals")
final <- as.data.frame(final)
final <- cbind(final, rep(buf, nrow(final)))
all_final <- rbind(all_final, final)
}
#Discount those that aren't significant
for(r in 1:nrow(all_final)) {
if(!as.logical(all_final[r,4])) all_final[r,3] <- "9999999"
if(!as.logical(all_final[r,6])) all_final[r,5] <- "9999999"
if(!as.logical(all_final[r,8])) all_final[r,7] <- "9999999"
if(!as.logical(all_final[r,10])) all_final[r,9] <- "9999999"
}
#Do some math to make it easy to identify the ideal model
all_final$min <- apply(all_final[,c(3,5,7,9)], 1, min, na.rm = T)
all_final$secondsmallest <- apply(all_final[,c(3,5,7,9)], 1, function(row) sort(row)[2])
all_final$dif <- as.numeric(all_final$min) - as.numeric(all_final$secondsmallest)
all_final$pick <- ifelse(all_final$dif <= 4, "check", "")
write.csv(all_final, filename)
}
run <- 1
daily <- c(TRUE, TRUE, FALSE, FALSE)
zeros <- c(TRUE, FALSE, TRUE, FALSE)
all_final <- c()
include_zeros <- zeros[run]
run_daily <- daily[run]
filename <- "model-comps/model_selection"
filename <- ifelse(run_daily, paste0(filename, "_average"), paste0(filename, "_accumulated"))
filename <- ifelse(include_zeros, paste0(filename, "_zeros.csv"), paste0(filename, "_no_zeros.csv"))
if(dir.exists(paste0(getwd(), "/", filename))) a <- 2 #next
a
paste0(getwd(), "/", filename)
b <- paste0(getwd(), "/", filename)
dir.exists(b)
file.exists(b)
#If you don't need to extract, just use this to get pp_data together. If you do, you'll need to run precip_extract
for(run in 1:4) {
all_final <- c()
include_zeros <- zeros[run]
run_daily <- daily[run]
filename <- "model-comps/model_selection"
filename <- ifelse(run_daily, paste0(filename, "_average"), paste0(filename, "_accumulated"))
filename <- ifelse(include_zeros, paste0(filename, "_zeros.csv"), paste0(filename, "_no_zeros.csv"))
if(file.exists(paste0(getwd(), "/", filename))) next
for(buf in bufs) {
rdsname <- paste0("precip/", buf, "_precip.rds")
precip <- readRDS(rdsname)
source('~/Documents/Stanford/precip-price/functions_for_analysis.R')
#get the right pp_Data
pp_data <- clean_precip(precip)
sorghum <- get_grain_data(pp_data, "sorghum", run_daily, include_zeros)
millet <- get_grain_data(pp_data, "millet", run_daily, include_zeros)
maize <- get_grain_data(pp_data, "maize", run_daily, include_zeros)
## run linear, quad, and 3rd regression and make a table
commods <- list(sorghum, millet, maize)
types <- c("p_sow", "p_grow", "p_harv", "p_sup", "p_onemonth")
final <- c()
for(com in commods) {
for(t in types) {
#run logs
llinear <- l_regress(com, t, 1)
lquad <- l_regress(com, t, 2)
lthird <- l_regress(com, t, 3)
llog <- l_regress(com, t, "log")
#run logs
fllinear <- l_regress_felm(com, t, 1)
flquad <- l_regress_felm(com, t, 2)
flthird <- l_regress_felm(com, t, 3)
fllog <- l_regress_felm(com, t, "log")
p_llinear <- all(summary(fllinear)$coefficients[,4] < 0.05)
p_lquad <- all(summary(flquad)$coefficients[,4] < 0.05)
p_lthird <- all(summary(flthird)$coefficients[,4] < 0.05)
p_llog <- all(summary(fllog)$coefficients[,4] < 0.05)
gr <- as.character(com$type[1])
outcomes <- cbind(gr, t, AIC(llinear), p_llinear,
AIC(lquad), p_lquad, AIC(lthird),
p_lthird, AIC(llog), p_llog)
final <- rbind(final, outcomes)
}
}
colnames(final) <- c("grain", "time_period", "log_linear", "ll_pvals", "log_2", "l2_pvals",
"log_3", "l3_pvals", "log_log", "lg_pvals")
final <- as.data.frame(final)
final <- cbind(final, rep(buf, nrow(final)))
all_final <- rbind(all_final, final)
}
#Discount those that aren't significant
for(r in 1:nrow(all_final)) {
if(!as.logical(all_final[r,4])) all_final[r,3] <- "9999999"
if(!as.logical(all_final[r,6])) all_final[r,5] <- "9999999"
if(!as.logical(all_final[r,8])) all_final[r,7] <- "9999999"
if(!as.logical(all_final[r,10])) all_final[r,9] <- "9999999"
}
#Do some math to make it easy to identify the ideal model
all_final$min <- apply(all_final[,c(3,5,7,9)], 1, min, na.rm = T)
all_final$secondsmallest <- apply(all_final[,c(3,5,7,9)], 1, function(row) sort(row)[2])
all_final$dif <- as.numeric(all_final$min) - as.numeric(all_final$secondsmallest)
all_final$pick <- ifelse(all_final$dif <= 4, "check", "")
write.csv(all_final, filename)
}
run <- 3
#If you don't need to extract, just use this to get pp_data together. If you do, you'll need to run precip_extract
for(run in 1:4) {
all_final <- c()
include_zeros <- zeros[run]
run_daily <- daily[run]
filename <- "model-comps/model_selection"
filename <- ifelse(run_daily, paste0(filename, "_average"), paste0(filename, "_accumulated"))
filename <- ifelse(include_zeros, paste0(filename, "_zeros.csv"), paste0(filename, "_no_zeros.csv"))
if(file.exists(paste0(getwd(), "/", filename))) next
for(buf in bufs) {
rdsname <- paste0("precip/", buf, "_precip.rds")
precip <- readRDS(rdsname)
source('~/Documents/Stanford/precip-price/functions_for_analysis.R')
#get the right pp_Data
pp_data <- clean_precip(precip)
sorghum <- get_grain_data(pp_data, "sorghum", run_daily, include_zeros)
millet <- get_grain_data(pp_data, "millet", run_daily, include_zeros)
maize <- get_grain_data(pp_data, "maize", run_daily, include_zeros)
## run linear, quad, and 3rd regression and make a table
commods <- list(sorghum, millet, maize)
types <- c("p_sow", "p_grow", "p_harv", "p_sup", "p_onemonth")
final <- c()
for(com in commods) {
for(t in types) {
#run logs
llinear <- l_regress(com, t, 1)
lquad <- l_regress(com, t, 2)
lthird <- l_regress(com, t, 3)
llog <- l_regress(com, t, "log")
#run logs
fllinear <- l_regress_felm(com, t, 1)
flquad <- l_regress_felm(com, t, 2)
flthird <- l_regress_felm(com, t, 3)
fllog <- l_regress_felm(com, t, "log")
p_llinear <- all(summary(fllinear)$coefficients[,4] < 0.05)
p_lquad <- all(summary(flquad)$coefficients[,4] < 0.05)
p_lthird <- all(summary(flthird)$coefficients[,4] < 0.05)
p_llog <- all(summary(fllog)$coefficients[,4] < 0.05)
gr <- as.character(com$type[1])
outcomes <- cbind(gr, t, AIC(llinear), p_llinear,
AIC(lquad), p_lquad, AIC(lthird),
p_lthird, AIC(llog), p_llog)
final <- rbind(final, outcomes)
}
}
colnames(final) <- c("grain", "time_period", "log_linear", "ll_pvals", "log_2", "l2_pvals",
"log_3", "l3_pvals", "log_log", "lg_pvals")
final <- as.data.frame(final)
final <- cbind(final, rep(buf, nrow(final)))
all_final <- rbind(all_final, final)
}
#Discount those that aren't significant
for(r in 1:nrow(all_final)) {
if(!as.logical(all_final[r,4])) all_final[r,3] <- "9999999"
if(!as.logical(all_final[r,6])) all_final[r,5] <- "9999999"
if(!as.logical(all_final[r,8])) all_final[r,7] <- "9999999"
if(!as.logical(all_final[r,10])) all_final[r,9] <- "9999999"
}
#Do some math to make it easy to identify the ideal model
all_final$min <- apply(all_final[,c(3,5,7,9)], 1, min, na.rm = T)
all_final$secondsmallest <- apply(all_final[,c(3,5,7,9)], 1, function(row) sort(row)[2])
all_final$dif <- as.numeric(all_final$min) - as.numeric(all_final$secondsmallest)
all_final$pick <- ifelse(all_final$dif <= 4, "check", "")
write.csv(all_final, filename)
}
run <- 3
all_final <- c()
include_zeros <- zeros[run]
run_daily <- daily[run]
filename <- "model-comps/model_selection"
filename <- ifelse(run_daily, paste0(filename, "_average"), paste0(filename, "_accumulated"))
filename <- ifelse(include_zeros, paste0(filename, "_zeros.csv"), paste0(filename, "_no_zeros.csv"))
if(file.exists(paste0(getwd(), "/", filename))) next
buf <- 0.25
rdsname <- paste0("precip/", buf, "_precip.rds")
precip <- readRDS(rdsname)
source('~/Documents/Stanford/precip-price/functions_for_analysis.R')
#get the right pp_Data
pp_data <- clean_precip(precip)
sorghum <- get_grain_data(pp_data, "sorghum", run_daily, include_zeros)
millet <- get_grain_data(pp_data, "millet", run_daily, include_zeros)
maize <- get_grain_data(pp_data, "maize", run_daily, include_zeros)
## run linear, quad, and 3rd regression and make a table
commods <- list(sorghum, millet, maize)
types <- c("p_sow", "p_grow", "p_harv", "p_sup", "p_onemonth")
final <- c()
for(com in commods) {
for(t in types) {
#run logs
llinear <- l_regress(com, t, 1)
lquad <- l_regress(com, t, 2)
lthird <- l_regress(com, t, 3)
llog <- l_regress(com, t, "log")
#run logs
fllinear <- l_regress_felm(com, t, 1)
flquad <- l_regress_felm(com, t, 2)
flthird <- l_regress_felm(com, t, 3)
fllog <- l_regress_felm(com, t, "log")
p_llinear <- all(summary(fllinear)$coefficients[,4] < 0.05)
p_lquad <- all(summary(flquad)$coefficients[,4] < 0.05)
p_lthird <- all(summary(flthird)$coefficients[,4] < 0.05)
p_llog <- all(summary(fllog)$coefficients[,4] < 0.05)
gr <- as.character(com$type[1])
outcomes <- cbind(gr, t, AIC(llinear), p_llinear,
AIC(lquad), p_lquad, AIC(lthird),
p_lthird, AIC(llog), p_llog)
final <- rbind(final, outcomes)
}
}
for(com in commods) {
for(t in types) {
#run logs
llinear <- l_regress(com, t, 1)
lquad <- l_regress(com, t, 2)
lthird <- l_regress(com, t, 3)
llog <- l_regress(com, t, "log")
#run logs
fllinear <- l_regress_felm(com, t, 1)
flquad <- l_regress_felm(com, t, 2)
flthird <- l_regress_felm(com, t, 3)
fllog <- l_regress_felm(com, t, "log")
p_llinear <- all(summary(fllinear)$coefficients[,4] < 0.05)
p_lquad <- all(summary(flquad)$coefficients[,4] < 0.05)
p_lthird <- all(summary(flthird)$coefficients[,4] < 0.05)
p_llog <- all(summary(fllog)$coefficients[,4] < 0.05)
gr <- as.character(com$type[1])
outcomes <- cbind(gr, t, AIC(llinear), p_llinear,
AIC(lquad), p_lquad, AIC(lthird),
p_lthird, AIC(llog), p_llog)
final <- rbind(final, outcomes)
}
}
mat
com <- sorghum
t <- "p_sow"
debug(l_regress)
llog <- l_regress(com, t, "log")
llog
fllog <- l_regress_felm(com, t, "log")
source('~/Documents/Stanford/precip-price/functions_for_analysis.R', echo=TRUE)
for(com in commods) {
for(t in types) {
#run logs
llinear <- l_regress(com, t, 1)
lquad <- l_regress(com, t, 2)
lthird <- l_regress(com, t, 3)
llog <- l_regress(com, t, "log")
#run logs
fllinear <- l_regress_felm(com, t, 1)
flquad <- l_regress_felm(com, t, 2)
flthird <- l_regress_felm(com, t, 3)
fllog <- l_regress_felm(com, t, "log")
p_llinear <- all(summary(fllinear)$coefficients[,4] < 0.05)
p_lquad <- all(summary(flquad)$coefficients[,4] < 0.05)
p_lthird <- all(summary(flthird)$coefficients[,4] < 0.05)
p_llog <- all(summary(fllog)$coefficients[,4] < 0.05)
gr <- as.character(com$type[1])
outcomes <- cbind(gr, t, AIC(llinear), p_llinear,
AIC(lquad), p_lquad, AIC(lthird),
p_lthird, AIC(llog), p_llog)
final <- rbind(final, outcomes)
}
}
### Running some basic code to decide on ideal model for each commodity
# Source files with functions useful/data prep
setwd("/Users/amina/Documents/Stanford/precip-price")
price <- readRDS("saved-output/formatted-price.rds")
bufs <- c(.25,1,2)
# Arguments to change depending on what you want to run
daily <- c(TRUE, TRUE, FALSE, FALSE)
zeros <- c(TRUE, FALSE, TRUE, FALSE)
#If you don't need to extract, just use this to get pp_data together. If you do, you'll need to run precip_extract
for(run in 1:4) {
all_final <- c()
include_zeros <- zeros[run]
run_daily <- daily[run]
filename <- "model-comps/model_selection"
filename <- ifelse(run_daily, paste0(filename, "_average"), paste0(filename, "_accumulated"))
filename <- ifelse(include_zeros, paste0(filename, "_zeros.csv"), paste0(filename, "_no_zeros.csv"))
if(file.exists(paste0(getwd(), "/", filename))) next
for(buf in bufs) {
rdsname <- paste0("precip/", buf, "_precip.rds")
precip <- readRDS(rdsname)
source('~/Documents/Stanford/precip-price/functions_for_analysis.R')
#get the right pp_Data
pp_data <- clean_precip(precip)
sorghum <- get_grain_data(pp_data, "sorghum", run_daily, include_zeros)
millet <- get_grain_data(pp_data, "millet", run_daily, include_zeros)
maize <- get_grain_data(pp_data, "maize", run_daily, include_zeros)
## run linear, quad, and 3rd regression and make a table
commods <- list(sorghum, millet, maize)
types <- c("p_sow", "p_grow", "p_harv", "p_sup", "p_onemonth")
final <- c()
for(com in commods) {
for(t in types) {
#run logs
llinear <- l_regress(com, t, 1)
lquad <- l_regress(com, t, 2)
lthird <- l_regress(com, t, 3)
llog <- l_regress(com, t, "log")
#run logs
fllinear <- l_regress_felm(com, t, 1)
flquad <- l_regress_felm(com, t, 2)
flthird <- l_regress_felm(com, t, 3)
fllog <- l_regress_felm(com, t, "log")
p_llinear <- all(summary(fllinear)$coefficients[,4] < 0.05)
p_lquad <- all(summary(flquad)$coefficients[,4] < 0.05)
p_lthird <- all(summary(flthird)$coefficients[,4] < 0.05)
p_llog <- all(summary(fllog)$coefficients[,4] < 0.05)
gr <- as.character(com$type[1])
outcomes <- cbind(gr, t, AIC(llinear), p_llinear,
AIC(lquad), p_lquad, AIC(lthird),
p_lthird, AIC(llog), p_llog)
final <- rbind(final, outcomes)
}
}
colnames(final) <- c("grain", "time_period", "log_linear", "ll_pvals", "log_2", "l2_pvals",
"log_3", "l3_pvals", "log_log", "lg_pvals")
final <- as.data.frame(final)
final <- cbind(final, rep(buf, nrow(final)))
all_final <- rbind(all_final, final)
}
#Discount those that aren't significant
for(r in 1:nrow(all_final)) {
if(!as.logical(all_final[r,4])) all_final[r,3] <- "9999999"
if(!as.logical(all_final[r,6])) all_final[r,5] <- "9999999"
if(!as.logical(all_final[r,8])) all_final[r,7] <- "9999999"
if(!as.logical(all_final[r,10])) all_final[r,9] <- "9999999"
}
#Do some math to make it easy to identify the ideal model
all_final$min <- apply(all_final[,c(3,5,7,9)], 1, min, na.rm = T)
all_final$secondsmallest <- apply(all_final[,c(3,5,7,9)], 1, function(row) sort(row)[2])
all_final$dif <- as.numeric(all_final$min) - as.numeric(all_final$secondsmallest)
all_final$pick <- ifelse(all_final$dif <= 4, "check", "")
write.csv(all_final, filename)
}
all_final
min(all_final[1,c(3,5,7,9)])
min(all_final[1,][,c(3,5,7,9)])
min(all_final[1,][c(3,5,7,9)])
all_final[,c(3,5,7,9)]
all_final[,c(3,5,7,9)][1,]
min(all_final[,c(3,5,7,9)][1,])
min(all_final[,c(3,5,7,9)][1,], na.rm)
min(all_final[,c(3,5,7,9)][1,], na.rm = T)
